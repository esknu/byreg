---
title: "assignment"
format: html
editor: visual
---

```{r}
#| label: setup
#| output: false
#| message: false
#| echo: false
library(eurostat)
library(dineq)
library(readr)
library(tidyverse)
library(stringr)
library(huxtable)
library(vtable)
library(ggplotify)
library(grid)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(broom)
library(lmtest)
library(plm)
```

Formålet og motivasjonen for denne artikkelen er å se på mulige pådrivere som påvirker by-land-skillet i Europa.
For å belyse dette skal vi kritisk undersøke hvordan faktorer påvirker by-land-skillet slik som arbeidsledighetsraten, sysselsettingsvekst og det lokale boligmarkedet påvirker mønstrene for befolkningsfordelingen og jobbskapingen på tvers av ulike europeiske land. 
Vi skal henholdsvis se nærmere på landene Østerrike, Belgia, Tyskland, Danmark, Estland, Hellas, Spania, Finland, Frankrike, Irland, Italia, Luxembourg, Norge, Nederland, Polen, Portugal, Sverige, Slovenia, og Slovakia.

## **Part 1: Data Collection and Initial Analysis**

### **Task 1 -- Data Gathering:**

```{r}
urban <- ilc_lvho01_custom_9256830_linear <- read_csv("ilc_lvho01__custom_9256830_linear.csv", 
    na = "NA")
urban <- urban |> 
  select(-DATAFLOW, -`LAST UPDATE`, -freq, -building, -OBS_FLAG, -building, -incgrp) 

urban <- urban |> 
  select(country = geo, location = deg_urb, year = TIME_PERIOD, Population = OBS_VALUE)
urban <- urban |> 
mutate(location = recode(location,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))


#deg1 = city, deg2 = towns and suburbs, deg3 = Rural areas
```

```{r}
Pop <- demo_pjan_custom_9363002_linear <- read_csv("demo_pjan__custom_9363002_linear.csv", 
    na = "NA")
```

### **Task 2 -- Data Analysis:**

For å se nærmere på by-land-skillet trekker vi ut 3 underkatogorier av variabelen 'Region Type' i form av; 

-   Byer (tett befolkede områder)

-   Tettsteder og forsteder (områder med middels tetthet)

-   Rurale områder (tynt befolkede områder)

Vi skal nå analysere befolkningsveksttrender ved hjelp av disse kategoriene. 

```{r}
Pop <- Pop |> 
  select(country = geo, year = TIME_PERIOD, Population = OBS_VALUE)
```

```{r}
urb2 <- urban |> 
  left_join(Pop, urban, by = c("country", "year"))
```

```{r}
urb2 <- urb2 |> 
  mutate(
    Pop = round((Population.x * Population.y)/100, digits = 0)
  )
```

```{r}
datapt1 <- urb2 |> 
  select(Year = year, Country = country, Region_Type = location, Population = Pop) |> 
  filter(
    str_sub(Country, start = 1L, end = 2L) %in% c("AT", "BE", "DE", "DK", "ES", "FI", "FR", "IE", "IT", "NO", "NL", "PL", "PT", "SE", "SI", "SK")
  )
```

```{r}
datapt1 |> 
  ggplot(
    aes(
      x = Year,
      y = Population,
      color = Region_Type
    )
  ) +
  geom_smooth(level = 0.5, span = 1)
```

Figur 1 viser gjennomsnittlig befolkningsvekst for de tre ulike regiontypene fra 2003 til 2022.
Vi ser at byer har hatt den største veksten i populasjon fra 2003 til omtrent 2010, hvor den fra 2010 synker gradvis før den flater ut fra 2017 til 2022.
Tettsteder og forsteder har en jevn stigning fra året 2003 til 2022.
Rurale områder har en jevn stigning frem til 2015, før man har en slak nedgang frem til 2022. 

Befolkningstrenden tyder på at frem til 2010 velger den største delen av befolkningen i Europa å bosette seg i byer, dvs.
det har vært en økt sentralisering.
Fra 2010 synker bosettingen i byer, som tyder på infrastrukturen i Europa har blitt bedre.
Ved bruk av budrentemodellen kan dette tyde på at man får mer for pengene i kategoriene tettsteder/forsteder og rurale områder.
Når vi ser på tettsteder/forsteder og rurale områder ser vi at disse to frem til 2016 tar over den største veksten i bosetting, hvor man fra 2016/2017 ser at det kun er tettsteder som har en vekst. 

Det er verdt å merke seg at Figur 1 ikke er en særlig god fremstilling da dataene ikke har sitt opphav i 2003, hvor vi derfor bedre kan belyse dette med å sitte 2003 som et index år.
Ved å gjøre dette vil vi da kunne se på den relative veksten i forhold til dette index året og vil da være mer representativt for en befolkningsvekst eller befolkningsnedgang i perioden 2003-2022.

Figur 2 gir et mer nøyaktig bilde av de relative endringene i befolkningsutviklingen på tvers av de tre ulike kategoriene.
Tidsseriene for kategoriene er skalert med en faktor som definerer befolkningen til å være 100 i 2003.
Dermed representerer kurvene prosentvis befolkningsvekst over perioden.

```{r}
# Assuming your data frame is datapt1
datapt1 <- datapt1 %>%
  # Group by Country and Region_Type
  group_by(Country, Region_Type) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / Population[Year == 2005]* 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
datapt1 |> 
ggplot(aes(x = Year, y = Relative_Growth, color = Region_Type)) +
  geom_smooth(level = 0.5, span = 0.25, linetype = 1, se = FALSE) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
  labs(title = "Relative Population Growth from 2005",
       x = "Year",
       y = "Relative Growth",
       color = "Region_Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2005, max(datapt1$Year), by = 5)) +
  xlim(2005, 2022) 
```

***Espen*** Figur 2 viser ​​​​gjennomsnittlig relativ befolkningsvekst, hvor 2003 = 100.

Videre skal vi utforske variasjoner for ulike europeiske land.
Vi har gjort dette ved å dele det europeiske utvalget av land fra Eurostat inn i tre hovedgrupper for å muliggjøre en meningsfull sammenligning av variasjoner i forhold til bosettingsmønstre og utvikling.
Disse gruppene er definert ut fra geografisk beliggenhet og generelle økonomiske kjennetegn.

**Gruppe 1: Vesteuropeiske land**

Denne gruppen omfatter land med høy grad av urbanisering og velutviklede økonomier.
Landene i denne gruppen, inkludert Østerrike, Belgia, Tyskland, og Frankrike, kjennetegnes av tettpakkede byområder og generelt høy befolkningstetthet (<https://fn.no/verdenskart>).
Denne inndelingen gir et grunnlag for å analysere lignende utviklingsmønstre og utfordringer knyttet til urban og regional utvikling.

**Gruppe 2: Mellomeuropeiske land**

Denne gruppen inkluderer land med en mellomgrad av urbanisering og varierte økonomiske forhold.
Irland, Norge, og Sverige er eksempler på land i denne gruppen, som har en balanse mellom byutvikling og forsteder, samt en betydelig andel av befolkningen som bor i mindre tett befolkede områder.
Analyse av disse landene kan bidra til å avdekke regionale forskjeller og tilpasninger til demografiske og økonomiske endringer.

**Gruppe 3: Østeuropeiske land**

Denne gruppen omfatter land med lavere urbanisering og økonomier i utvikling.
Land som Estland, Hellas, Polen, og Portugal er eksempler på land i denne gruppen, preget av en overvekt av tynnere befolkede områder og landlige samfunn.
Analyse av disse landene gir innsikt i spesifikke utfordringer knyttet til landlig utvikling og tilpasning til endringer i moderne samfunn.

Det er viktig å merke seg at disse inndelingene er forenklede og bør tilpasses spesifikke forskningsspørsmål og tilgjengelig data, f.eks.
for å unngå MAUP (Modifiable Areal Unit Problem).
Faktorer som historisk kontekst, politiske systemer, og kulturelle påvirkninger kan ytterligere informere analysen av variansene innenfor hver landsgruppe.

**Group 1: Urbanized Countries (Cities) Asbjørn**

```{r}
City <- urb2 |> 
  select(Year = year, Country = country, Region_Type = location, Population = Pop) |> 
  filter(
    str_sub(Country, start = 1L, end = 2L) %in% c("AT", "BE", "DE", "DK", "ES", "FI", "FR", "IT", "NL")
  )
```

```{r}
City <- City %>%
  # Group by Country and Region Type
  group_by(Country, Region_Type) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / Population[Year == 2005]* 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
City |> 
ggplot(aes(x = Year, y = Relative_Growth, color = Region_Type)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth",
       color = "Region_Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2005, max(datapt1$Year), by = 5))
```

Figur 3 viser gjennomsnittlig relativ befolkningsvekst for de tre ulike regiontypene fra 2005 til 2022 for gruppe 1: Vesteuropeiske land, hvor 2005 = 100.
Populasjonen i rurale områder har opplevd en markant vekst fra 2005 til omtrent 2017, etterfulgt av en betydelig nedgang.
Denne trenden kan tyde på perioder med økt attraktivitet for rural bosetting, etterfulgt av utfordringer eller endringer som fører til nedgangen.
Tettsteder og forsteder har vist en jevn stigning i befolkningsvekst fra 2005 til 2022.
Dette kan reflektere en pågående urbaniserings- og suburbaniseringsprosess, der disse områdene forblir attraktive for bosetting.
Byområder har hatt en stabil befolkningsutvikling fra 2005 til omtrent 2010, etterfulgt av en nedgang frem til omtrent 2016.
Deretter har det vært en moderat økning frem til 2022.
Denne komplekse trenden kan indikere variasjoner i byenes attraktivitet eller endringer i byutviklingsmønstre over tid.

Samlet sett gir figuren et bilde av dynamikken i befolkningsendringer i ulike regiontyper i Vesteuropeiske land, med spesiell vekt på den jevne veksten i tettsteder og forsteder og variabel utvikling i byområdene.

**Group 2: Intermediate Settlement Countries (Towns and Suburbs) Marius**

```{r}
Suburb <- urb2 |> 
  select(Year = year, Country = country, Region_Type = location, Population = Pop) |> 
  filter(
    str_sub(Country, start = 1L, end = 2L) %in% c("IE", "NO", "SE")
  )
```

```{r}
Suburb <- Suburb %>%
  # Group by Country and Region Type
  group_by(Country, Region_Type) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / Population[Year == 2005]* 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
Suburb |> 
ggplot(aes(x = Year, y = Relative_Growth, color = Region_Type)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth",
       color = "Region_Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2005, max(datapt1$Year), by = 5))
```

Figur 4 viser en gjennomsnittlig relativ befolkningsvekst for de tre ulike regiontypene «byer», «tettsteder og forstander», og «rurale områder» fra 2005 -- 2022 for gruppe 2; Mellomliggende bosettingsland, hvor man har 2005 = 100 slik at den relative veksten har sitt utgangspunkt fra starten av perioden.
Populasjonen i tettsteder og forstander viser en markant vekst fra 2010, hvor man ser at man har vekst i både byer, tettsteder og forsteder, men en nedgang i rurale områder.
Fra gjennomgangen av dataene ser man at dersom man ikke hadde tatt med Sverige i denne gruppen hadde man fått en negativ relativ vekst i denne gruppen.
Dette viser at i gruppe 2 er det en markant trend til bosetting i tettsteder og forstander, men at det også er en vis spredning i forhold til at man velger å sentralisere seg i byer.

**Group 3: Rural Countries (Rural Areas) Anine**

```{r}
Rural <- urb2 |> 
  select(Year = year, Country = country, Region_Type = location, Population = Pop) |> 
  filter(
    str_sub(Country, start = 1L, end = 2L) %in% c( "PL", "PT", "SI", "SK")
  )
```

```{r}
 Rural <- Rural %>%
  # Group by Country and Region Type
  group_by(Country, Region_Type) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / Population[Year == 2005]* 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
Rural |> 
ggplot(aes(x = Year, y = Relative_Growth, color = Region_Type)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth",
       color = "Region_Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2005, max(datapt1$Year), by = 5))
```

```{r}
library(ggplot2)

# Assuming your data frame is datapt1
datapt1_filtered <- datapt1 %>%
  filter(Country %in% c("DE", "NO", "EE")) %>%
  group_by(Country, Region_Type) %>%
  mutate(Relative_Growth = Population / Population[Year == 2005] * 100) %>%
  ungroup()

# Create a facet plot with lines for each Region Type
ggplot(datapt1_filtered, aes(x = Year, y = Relative_Growth, color = Region_Type)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth",
       color = "Region_Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2005, max(datapt1$Year), by = 5)) +
  facet_wrap(~Country, scales = "free_y")

```

## **Part 2: Advanced Analysis - Understanding the Impact of Economic Factors on Population Growth**

### **Task 1: Gathering Additional Data**

```{r}
housingprices <- read_csv("ilc_lvho07d__custom_9401957_linear.csv", 
    na = "NA")
employmentrate <- read_csv("lfst_r_erednu__custom_9401940_linear.csv", 
    na = "NA")
unemploymentrate <- read_csv("unemployment.csv", 
    na = "NA")
```

```{r}
housingprices <- housingprices |> 
  select(Year = TIME_PERIOD, Country = geo, Region_Type = deg_urb, housingprices = OBS_VALUE) |> 
  mutate(Region_Type = recode(Region_Type,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))
```

```{r}
employmentrate <- employmentrate |> 
  filter(citizen == "TOTAL")
```

```{r}
employmentrate <- employmentrate |> 
  select(Year = TIME_PERIOD, Country = geo, Region_Type = deg_urb, employmentrate = OBS_VALUE) |> 
  mutate(Region_Type = recode(Region_Type,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))
```

```{r}
unemploymentrate <- unemploymentrate |> 
  select(Year = TIME_PERIOD, Country = geo, Region_Type = deg_urb, unemploymentrate = OBS_VALUE) |> 
  mutate(Region_Type = recode(Region_Type,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))
```

### **Task 2: Application of Classification Methodology**

```{r}
merged <- 
  merge(datapt1, unemploymentrate, by = c("Country", "Year", "Region_Type"), na.rm = TRUE) %>%
  filter(complete.cases(.))
```

```{r}
merged <- merged %>% 
  merge(employmentrate, by = c("Country", "Year", "Region_Type"), na.rm = TRUE) %>%
  filter(complete.cases(.))
```

```{r}
merged <- merged %>%
  merge(housingprices, by = c("Country", "Year", "Region_Type"), na.rm = TRUE) %>%
  filter(complete.cases(.))
```

```{r}
merged <- merged |> 
  group_by(Country, Year) |> 
  mutate(meanUnemployment = mean(unemploymentrate, na.rm = TRUE)) |>
  ungroup()

merged <- merged |> 
  group_by(Country, Year) |> 
  mutate(meanEmploymentrate = mean(employmentrate, na.rm = TRUE)) |>
  ungroup()

merged <- merged |> 
  group_by(Country, Year) |> 
  mutate(meanHousingprices = mean(housingprices, na.rm = TRUE)) |>
  ungroup()

```

```{r}
merged <- merged %>%
  mutate(Class = case_when(
    unemploymentrate > meanUnemployment & 
      employmentrate > meanEmploymentrate & 
      housingprices > meanHousingprices ~ 1,
    unemploymentrate > meanUnemployment & 
      employmentrate > meanEmploymentrate & 
      housingprices <= meanHousingprices ~ 2,
    unemploymentrate > meanUnemployment & 
      employmentrate <= meanEmploymentrate & 
      housingprices > meanHousingprices ~ 3,
    unemploymentrate > meanUnemployment & 
      employmentrate <= meanEmploymentrate & 
      housingprices <= meanHousingprices ~ 4,
    unemploymentrate <= meanUnemployment & 
      employmentrate > meanEmploymentrate & 
      housingprices > meanHousingprices ~ 5,
    unemploymentrate <= meanUnemployment & 
      employmentrate > meanEmploymentrate & 
      housingprices <= meanHousingprices ~ 6,
    unemploymentrate <= meanUnemployment & 
      employmentrate <= meanEmploymentrate & 
      housingprices > meanHousingprices ~ 7,
    unemploymentrate <= meanUnemployment & 
      employmentrate <= meanEmploymentrate & 
      housingprices <= meanHousingprices ~ 8,
    TRUE ~ 0  # Default value if none of the conditions are met
  ))
```

### **Task 3: Analysis and Visualization**

```{r}
Count <- merged %>%
  group_by(Class, Region_Type) %>%
  summarise(Count = n(), .groups = "drop")

all_classes <- as.factor(1:8)
Count |> 
ggplot(aes(x = Class, y = Count, fill = Region_Type)) +
    geom_bar(stat = "identity", position = "stack") +
    scale_x_discrete(limits = all_classes) +
    xlab("Class") +
    ylab("Region Types") +
    ggtitle("Stacked Bar Chart of Region Type Counts by Class") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
```

### **Task 4: Interpretation and Relation to Course Literature**

```{r}
merged |> 
  filter(Year >= 2005) |> 
  ggplot(
    aes(
      x = Year,
      y = Relative_Growth,
      group = Class,
      color = as.factor(Class)
    )
  ) +
  geom_smooth(span = 1, se = FALSE) +
  xlim(2005, 2022) 
```

```{r}
merged |> 
  filter(Year >= 2005) |> 
  ggplot(
    aes(
      x = Year,
      y = Population,
      group = Class,
      color = as.factor(Class)
    )
  ) +
  geom_smooth(span = 1, se = FALSE) +
  xlim(2005, 2022) 
```

## Appendix

```{r}
# Assuming your data frame is datapt1
datapt1 <- datapt1 %>%
  # Group by Country and Region Type
  group_by(Country, Region_Type) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / first(Population) * 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
ggplot(datapt1, aes(x = Year, y = Relative_Growth, color = Region_Type, group = Region_Type)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth",
       color = "Region_Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2003, max(datapt1$Year), by = 5)) + facet_wrap(~Country)
```
