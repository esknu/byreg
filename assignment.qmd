---
title: "assignment"
format: html
editor: visual
---

```{r}
#| label: setup
#| output: false
#| message: false
#| echo: false
library(eurostat)
library(dineq)
library(readr)
library(tidyverse)
library(stringr)
library(huxtable)
library(vtable)
library(ggplotify)
library(grid)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(broom)
library(lmtest)
library(plm)
```

## **Part 1: Data Collection and Initial Analysis**

### **Task 1 -- Data Gathering:**

```{r}
urban <- ilc_lvho01_custom_9256830_linear <- read_csv("ilc_lvho01__custom_9256830_linear.csv", 
    na = "NA")
urban <- urban |> 
  select(-DATAFLOW, -`LAST UPDATE`, -freq, -building, -OBS_FLAG, -building, -incgrp) 

urban <- urban |> 
  select(country = geo, location = deg_urb, year = TIME_PERIOD, Population = OBS_VALUE)
urban <- urban |> 
mutate(location = recode(location,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))


#deg1 = city, deg2 = towns and suburbs, deg3 = Rural areas
```

```{r}
Pop <- demo_pjan_custom_9363002_linear <- read_csv("demo_pjan__custom_9363002_linear.csv", 
    na = "NA")
```

### **Task 2 -- Data Analysis:**

```{r}
Pop <- Pop |> 
  select(country = geo, year = TIME_PERIOD, Population = OBS_VALUE)
```

```{r}
urb2 <- urban |> 
  left_join(Pop, urban, by = c("country", "year"))
```

```{r}
urb2 <- urb2 |> 
  mutate(
    Pop = round((Population.x * Population.y)/100, digits = 0)
  )
```

```{r}
datapt1 <- urb2 |> 
  select(Year = year, Country = country, "Region Type" = location, Population = Pop) |> 
  filter(
    str_sub(Country, start = 1L, end = 2L) %in% c("AT", "BE", "DE", "DK", "EE", "EL", "ES", "FI", "FR", "IE", "IT", "LU", "NO", "NL", "PL", "PT", "SE", "SI", "SK")
  )
```

```{r}
datapt1 |> 
  ggplot(
    aes(
      x = Year,
      y = Population,
      color = `Region Type`
    )
  ) +
  geom_smooth(level = 0.5, span = 1)
```

```{r}
# Assuming your data frame is datapt1
datapt1 <- datapt1 %>%
  # Group by Country and Region Type
  group_by(Country, `Region Type`) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / Population[Year == 2005]* 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
datapt1 |> 
ggplot(aes(x = Year, y = Relative_Growth, color = `Region Type`)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  geom_hline(yintercept = 100, linetype = "dashed", color = "black") +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth (%)",
       color = "Region Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2005, max(datapt1$Year), by = 5))
```

## **Part 2: Advanced Analysis - Understanding the Impact of Economic Factors on Population Growth**

### **Task 1: Gathering Additional Data**

```{r}
housingcost <- read_csv("ilc_lvho07d__custom_9401957_linear.csv", 
    na = "NA")
employmentrate <- read_csv("lfst_r_erednu__custom_9401940_linear.csv", 
    na = "NA")
unemploymentrate <- read_csv("lfst_r_urgau__custom_9401924_linear.csv", 
    na = "NA")
```

```{r}
housingcost <- housingcost |> 
  select(Year = TIME_PERIOD, Country = geo, "Region Type" = deg_urb, dHousing = OBS_VALUE) |> 
  mutate(`Region Type` = recode(`Region Type`,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))
```

```{r}
employmentrate <- employmentrate |> 
  filter(citizen == "TOTAL")
```

```{r}
employmentrate <- employmentrate |> 
  select(Year = TIME_PERIOD, Country = geo, "Region Type" = deg_urb, dEmployment = OBS_VALUE) |> 
  mutate(`Region Type` = recode(`Region Type`,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))
```

```{r}
unemploymentrate <- unemploymentrate |> 
  select(Year = TIME_PERIOD, Country = geo, "Region Type" = deg_urb, dUnemployed = OBS_VALUE) |> 
  mutate(`Region Type` = recode(`Region Type`,
                           "DEG1" = "City",
                           "DEG2" = "Suburb",
                           "DEG3" = "Rural"))
```

### **Task 2: Application of Classification Methodology**

```{r}
merged <- 
  merge(datapt1, unemploymentrate, by = c("Country", "Year", "Region Type"), na.rm = TRUE) %>%
  filter(complete.cases(.))
```

```{r}
merged <- merged %>% 
  merge(employmentrate, by = c("Country", "Year", "Region Type"), na.rm = TRUE) %>%
  filter(complete.cases(.))
```

```{r}
merged <- merged %>%
  merge(housingcost, by = c("Country", "Year", "Region Type"), na.rm = TRUE) %>%
  filter(complete.cases(.))
```

### **Task 3: Analysis and Visualization**

### **Task 4: Interpretation and Relation to Course Literature**

## Appendix

```{r}
# Assuming your data frame is datapt1
datapt1 <- datapt1 %>%
  # Group by Country and Region Type
  group_by(Country, `Region Type`) %>%
  # Calculate relative growth
  mutate(Relative_Growth = Population / first(Population) * 100) %>%
  ungroup()

# Create a single graph with lines for each Region Type
ggplot(datapt1, aes(x = Year, y = Relative_Growth, color = `Region Type`, group = `Region Type`)) +
  geom_smooth(level = 0.5, span = 1, linetype = 1) +
  labs(title = "Relative Population Growth from 2003",
       x = "Year",
       y = "Relative Growth (%)",
       color = "Region Type") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(2003, max(datapt1$Year), by = 5)) + facet_wrap(~Country)
```
